// <auto-generated />
using System;
using Dtol;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dtol.Migrations
{
    [DbContext(typeof(DtolContext))]
    [Migration("20191009024126_infoRelation")]
    partial class infoRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dtol.Dtol.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AreaId");

                    b.Property<Guid?>("AreaInfoId");

                    b.Property<string>("BuildingNature");

                    b.Property<int?>("BuildingNo");

                    b.Property<DateTime?>("CheckinTime");

                    b.Property<DateTime?>("ConstructionTime");

                    b.Property<int?>("ElevatorCount");

                    b.Property<int?>("FloorCount");

                    b.Property<int?>("HouseCount");

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.Property<int?>("UndergroundCount");

                    b.Property<int?>("UnitNo");

                    b.HasKey("Id");

                    b.HasIndex("AreaInfoId");

                    b.ToTable("building");
                });

            modelBuilder.Entity("Dtol.Dtol.ResidentialArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<double?>("BuiltUpArea");

                    b.Property<DateTime?>("ConstructionTime");

                    b.Property<string>("Developers");

                    b.Property<string>("East");

                    b.Property<string>("Name");

                    b.Property<string>("North");

                    b.Property<int?>("ParkingSpacesAbove");

                    b.Property<int?>("ParkingSpacesBelow");

                    b.Property<string>("Property");

                    b.Property<string>("PropertyContacts");

                    b.Property<double?>("PropertyFee");

                    b.Property<string>("South");

                    b.Property<string>("Status");

                    b.Property<int?>("Telephone");

                    b.Property<string>("West");

                    b.HasKey("Id");

                    b.ToTable("residentialAreas");
                });

            modelBuilder.Entity("Dtol.Dtol.Building", b =>
                {
                    b.HasOne("Dtol.Dtol.ResidentialArea", "AreaInfo")
                        .WithMany()
                        .HasForeignKey("AreaInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
